{"version":3,"file":"static/js/766.35176ba5.chunk.js","mappings":"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","sources":["components/Button/Button.tsx","components/Container/Container.tsx","components/Modals/AddProductModal/AddProductModal.tsx","components/Modals/Modal.tsx","pages/Product/ProductMain/ProductMain.tsx","pages/Product/Product.tsx"],"sourcesContent":["import React from 'react'\r\n\r\ntype ButtonType = {\r\n    color: string\r\n    hover: string\r\n    action: React.MouseEventHandler<HTMLButtonElement>\r\n    text: string\r\n}\r\n\r\nconst Button: React.FC<ButtonType> = ({ color, action, text, hover }) => {\r\n    return (\r\n        <button\r\n            type='button'\r\n            className={`${color} text-sm font-semibold text-white px-4 py-2 rounded shadow-defaultBtn duration-200 active:opacity-70 hover:${hover}`}\r\n            onClick={action}\r\n        >\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default React.memo(Button)","import React from 'react'\r\n\r\ntype ContainerType = {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst Container: React.FC<ContainerType> = ({ children }) => {\r\n    return (\r\n        <div className='max-w-5xl w-full flex justify-center flex-col border rounded-md bg-white p-4 m-8 shadow-lg'>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Container)","import React, { useState, useEffect } from 'react'\r\nimport { addProduct } from '../../../redux/slices/thunks/addProduct'\r\nimport { useAppDispatch, useAppSelector } from '../../../redux/hooks'\r\nimport Modal from '../Modal'\r\nimport { IProductItem } from '../../../interfaces/IProductItem'\r\nimport { ProductModalType } from './types'\r\nimport { FormType } from './types'\r\nimport { updateProduct } from '../../../redux/slices/thunks/updateProduct'\r\nimport { PRODUCTS_API } from '../../../constants/api/api'\r\nimport axios from 'axios'\r\n\r\nconst AddProductModal: React.FC<ProductModalType> = ({ activeModal, setActiveModal, isEdit, id }) => {\r\n\r\n\r\n    const [form, setForm] = useState<FormType>(\r\n        {\r\n            imageUrl: '',\r\n            name: '',\r\n            count: '',\r\n            weight: '',\r\n            description: '',\r\n            height: '',\r\n            width: ''\r\n        }\r\n    )\r\n    const dispatch = useAppDispatch()\r\n    const products = useAppSelector(state => state.productSlice.products)\r\n    const currentProduct = products.find(el => el.id === id)\r\n    console.log(currentProduct)\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if (isEdit && currentProduct) {\r\n            const { imageUrl, name, count, weight, description, size } = currentProduct\r\n            setForm(\r\n                {\r\n                    imageUrl,\r\n                    name,\r\n                    count: String(count),\r\n                    weight,\r\n                    description,\r\n                    height: String(size.height),\r\n                    width: String(size.width)\r\n                }\r\n            )\r\n        }\r\n    }, [activeModal])\r\n\r\n\r\n    const handleChange: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void = (e) => {\r\n        const { value, name } = e.target\r\n        setForm(prevForm => (\r\n            {\r\n                ...prevForm,\r\n                [name]: value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const uploadImage: (e: React.ChangeEvent<HTMLInputElement>) => void = (e) => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setForm(prevForm => ({ ...prevForm, imageUrl: (reader.result) as string }))\r\n            }\r\n        }\r\n        if (e.target.files) {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        }\r\n\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setActiveModal(false)\r\n        setForm({\r\n            imageUrl: '',\r\n            name: '',\r\n            count: '',\r\n            weight: '',\r\n            description: '',\r\n            height: '',\r\n            width: '',\r\n        })\r\n    }\r\n\r\n    const disabled = !form.imageUrl || !form.name || !form.count || !form.weight || !form.description || !form.height || !form.width\r\n\r\n    const submitFunc: () => Promise<void> = async () => {\r\n        const newProduct: IProductItem = {\r\n            id: new Date().getTime().toString(),\r\n            imageUrl: form.imageUrl as string,\r\n            name: form.name as string,\r\n            count: Number(form.count),\r\n            description: form.description as string,\r\n            size: {\r\n                width: Number(form.width),\r\n                height: Number(form.height)\r\n            },\r\n            weight: form.weight as string,\r\n            comments: []\r\n        }\r\n        if (isEdit) {\r\n            dispatch(await updateProduct({ ...newProduct, id: id as string }))\r\n        } else {\r\n            dispatch(await addProduct(newProduct))\r\n        }\r\n\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            width='400px'\r\n            activeModal={activeModal}\r\n            closeModal={closeModal}\r\n        >\r\n            <p className='w-full text-center font-semibold text-base py-2 border-b'>{isEdit ? 'Edit Product' : 'Add Product'}</p>\r\n            <form method='POST' className='mt-4 flex flex-col'>\r\n                <div className='flex justify-center items-center'>\r\n                    <label className='text-xs w-32 h-32 border rounded-full flex items-center justify-center cursor-pointer mb-4'>\r\n                        {form.imageUrl?.length ? <img alt='productPhoto' src={form.imageUrl} className=\"w-full h-full object-cover rounded-full\" /> : <p>Choose photo</p>}\r\n\r\n                        <input type='file' className='hidden' onChange={(e) => uploadImage(e)} />\r\n                    </label>\r\n                </div>\r\n\r\n                <input\r\n                    required\r\n                    name='name'\r\n                    value={form.name}\r\n                    type='text'\r\n                    className='text-sm border rounded mx-4 placeholder:text-sm outline-none px-4 py-2 mb-4'\r\n                    placeholder='Name...'\r\n                    onChange={(e) => handleChange(e)}\r\n                />\r\n                <input\r\n                    required\r\n                    name='weight'\r\n                    value={form.weight}\r\n                    type='number'\r\n                    className='text-sm w-40 border rounded mx-4 placeholder:text-sm outline-none px-4 py-2 mb-4'\r\n                    placeholder='Weight(grams)...'\r\n                    onChange={(e) => handleChange(e)}\r\n                />\r\n                <input\r\n                    required\r\n                    name='count'\r\n                    value={form.count}\r\n                    type='number'\r\n                    className='text-sm w-40 border rounded mx-4 placeholder:text-sm outline-none px-4 py-2 mb-4'\r\n                    placeholder='Amount...'\r\n                    onChange={(e) => handleChange(e)}\r\n                />\r\n                <input\r\n                    required\r\n                    name='width'\r\n                    value={form.width}\r\n                    type='number'\r\n                    className='text-sm w-40 border rounded mx-4 placeholder:text-sm outline-none px-4 py-2 mb-4'\r\n                    placeholder='Width...'\r\n                    onChange={(e) => handleChange(e)}\r\n                />\r\n                <input\r\n                    required\r\n                    name='height'\r\n                    value={form.height}\r\n                    type='number'\r\n                    className='text-sm w-40 border rounded mx-4 placeholder:text-sm outline-none px-4 py-2 mb-4'\r\n                    placeholder='Height...'\r\n                    onChange={(e) => handleChange(e)}\r\n                />\r\n\r\n                <textarea\r\n                    name='description'\r\n                    value={form.description}\r\n                    placeholder='Describe product...'\r\n                    className='px-4 py-2 text-sm border rounded mx-4 placeholder:text-sm outline-none resize-none'\r\n                    onChange={(e) => handleChange(e)}\r\n                />\r\n\r\n                <div className='w-full flex justify-between px-4'>\r\n                    <button\r\n                        className='p-3 font-semibold text-red-500'\r\n                        type='button'\r\n                        onClick={closeModal}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        disabled={disabled}\r\n                        className={`p-3 font-semibold ${disabled ? 'text-blue-200' : 'text-blue-500'}`}\r\n                        type='button'\r\n                        onClick={() => submitFunc()}\r\n                    >\r\n                        Confirm\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default React.memo(AddProductModal)","import React from 'react'\r\n\r\ntype ModalType = {\r\n    width: string\r\n    activeModal: boolean\r\n    closeModal: () => void\r\n    children: React.ReactNode\r\n}\r\n\r\nconst Modal: React.FC<ModalType> = ({ children, width, activeModal, closeModal }) => {\r\n\r\n    return (\r\n        <div\r\n            onClick={closeModal}\r\n            className={`w-screen h-screen fixed top-0 left-0 cursor-default z-10 flex bg-modal items-center justify-center duration-300 \r\n        ${activeModal ? 'opacity-1 pointer-events-auto' : 'opacity-0 pointer-events-none'}`}\r\n        >\r\n            <div\r\n                style={{ width: width, transform: activeModal ? 'scale(1)' : 'scale(0.5)' }}\r\n                onClick={(e) => e.stopPropagation()}\r\n                className={`bg-white rounded-md duration-300 ${activeModal ? 'scale-100' : 'scale-50'}`}\r\n            >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Modal)","import React, { useState } from 'react'\r\nimport AddProductModal from '../../../components/Modals/AddProductModal/AddProductModal'\r\nimport Button from '../../../components/Button/Button'\r\nimport { IProductItem } from '../../../interfaces/IProductItem'\r\n\r\ntype ProductMainType = {\r\n    product: IProductItem\r\n}\r\n\r\nconst ProductMain: React.FC<ProductMainType> = ({ product }) => {\r\n\r\n\r\n    const [activeModal, setActiveModal] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <div className='w-full'>\r\n                <div className='w-full'>\r\n                    <img className='mt-4 w-full' src={product.imageUrl} alt=\"productPhoto\" />\r\n                    <div className='flex items-start justify-between mt-4'>\r\n                        <div>\r\n                            <p className='text-2xl'>Description: </p>\r\n                            <p className='text-sm mb-4'>{product.description}</p>\r\n                            <p className='text-2xl mb-4'>Product Size: </p>\r\n                            <p className='text-sm mb-4'>Height: {product.size.height}, Width: {product.size.width}</p>\r\n                        </div>\r\n                        <Button\r\n                            color='bg-blue-600'\r\n                            action={() => setActiveModal(true)}\r\n                            text='EDIT PRODUCT'\r\n                            hover='bg-blue-700'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <AddProductModal\r\n                setActiveModal={setActiveModal}\r\n                activeModal={activeModal}\r\n                isEdit={true}\r\n                id={product.id}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProductMain)","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Container from '../../components/Container/Container'\r\nimport AddProductModal from '../../components/Modals/AddProductModal/AddProductModal'\r\nimport ProductMain from './ProductMain/ProductMain'\r\nimport { useAppSelector } from '../../redux/hooks'\r\n\r\nconst Product: React.FC = () => {\r\n    const { product } = useParams()\r\n\r\n    const products = useAppSelector(state => state.productSlice.products)\r\n    const currentProduct = products.find(el => el.id === product)\r\n\r\n    if(!currentProduct) {\r\n        return <p>Not Found</p>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {currentProduct.id && (\r\n                <>\r\n                    <div className='w-full flex justify-center'>\r\n                        <Container>\r\n                            <h1 className='text-3xl font-medium text-center'>{currentProduct.name}</h1>\r\n                            <ProductMain product={currentProduct} />\r\n                        </Container>\r\n                    </div>\r\n\r\n                </>\r\n            )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Product)"],"names":["Button","color","action","text","hover","type","className","onClick","React","Container","children","AddProductModal","activeModal","setActiveModal","isEdit","id","useState","imageUrl","name","count","weight","description","height","width","form","setForm","dispatch","useAppDispatch","currentProduct","useAppSelector","state","productSlice","products","find","el","console","log","useEffect","size","String","handleChange","e","target","value","prevForm","closeModal","disabled","submitFunc","newProduct","Date","getTime","toString","Number","comments","updateProduct","addProduct","method","length","alt","src","onChange","reader","FileReader","onload","readyState","result","files","readAsDataURL","uploadImage","required","placeholder","Modal","style","transform","stopPropagation","ProductMain","product","Product","useParams"],"sourceRoot":""}