{"version":3,"file":"static/js/921.99af0147.chunk.js","mappings":"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","sources":["components/Button/Button.tsx","components/Container/Container.tsx","components/Modals/AddProductModal/AddProductModal.tsx","components/Modals/Modal.tsx","components/DropDown/DropDown.tsx","pages/Home/HomeMain/components/Sort/Sort.tsx","pages/Home/HomeMain/components/HomeHeader/HomeHeader.tsx","components/Modals/DeleteModal/DeleteModal.tsx","pages/Home/HomeMain/components/ProductItem/ProductItem.tsx","pages/Home/HomeMain/components/ListProducts/ListProducts.tsx","pages/Home/HomeMain/HomeMain.tsx","pages/Home/Home.tsx","redux/hooks.ts"],"sourcesContent":["import React from 'react'\r\n\r\ntype ButtonType = {\r\n    color: string\r\n    hover: string\r\n    action: React.MouseEventHandler<HTMLButtonElement>\r\n    text: string\r\n}\r\n\r\nconst Button: React.FC<ButtonType> = ({ color, action, text, hover }) => {\r\n    return (\r\n        <button\r\n            type='button'\r\n            className={`${color} text-sm font-semibold text-white px-4 py-2 rounded shadow-defaultBtn duration-200 active:opacity-70 hover:${hover}`}\r\n            onClick={action}\r\n        >\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default React.memo(Button)","import React from 'react'\r\n\r\ntype ContainerType = {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst Container: React.FC<ContainerType> = ({ children }) => {\r\n    return (\r\n        <div className='max-w-5xl w-full flex justify-center flex-col border rounded-md bg-white p-4 m-8 shadow-lg'>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Container)","import React, { useState, useEffect } from 'react'\r\nimport { addProduct } from '../../../redux/slices/thunks/addProduct'\r\nimport { useAppDispatch } from '../../../redux/hooks'\r\nimport Modal from '../Modal'\r\nimport { IProductItem } from '../../../interfaces/IProductItem'\r\nimport { ProductModalType } from './types'\r\nimport { FormType } from './types'\r\nimport { updateProduct } from '../../../redux/slices/thunks/updateProduct'\r\nimport { PRODUCTS_API } from '../../../constants/api/api'\r\nimport axios from 'axios'\r\n\r\nconst AddProductModal: React.FC<ProductModalType> = ({ activeModal, setActiveModal, isEdit, id }) => {\r\n\r\n\r\n    const [form, setForm] = useState<FormType>(\r\n        {\r\n            imageUrl: '',\r\n            name: '',\r\n            count: '',\r\n            weight: '',\r\n            desc: '',\r\n            height: '',\r\n            width: ''\r\n        }\r\n    )\r\n    const dispatch = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n\r\n        if (isEdit) {\r\n            const getProduct = async () => {\r\n                const { data } = await axios.get<IProductItem>(`${PRODUCTS_API}/${id}`)\r\n                const { imageUrl,\r\n                    name,\r\n                    count,\r\n                    weight,\r\n                    description,\r\n                    size } = data\r\n                    console.log(data, id, isEdit)\r\n                setForm({\r\n                    imageUrl,\r\n                    name,\r\n                    count: String(count),\r\n                    weight,\r\n                    desc:description,\r\n                    height:String(size.height),\r\n                    width:String(size.width)\r\n\r\n                })\r\n            }\r\n            getProduct()\r\n        }\r\n    }, [activeModal])\r\n\r\n\r\n    const handleChange: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void = (e) => {\r\n        const { value, name } = e.target\r\n        setForm(prevForm => (\r\n            {\r\n                ...prevForm,\r\n                [name]: value\r\n            }\r\n        ))\r\n    }\r\n\r\n    const uploadImage: (e: React.ChangeEvent<HTMLInputElement>) => void = (e) => {\r\n        const reader = new FileReader()\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setForm(prevForm => ({ ...prevForm, imageUrl: (reader.result) as string }))\r\n            }\r\n        }\r\n        if (e.target.files) {\r\n            reader.readAsDataURL(e.target.files[0])\r\n        }\r\n\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setActiveModal(false)\r\n        setForm({\r\n            imageUrl: '',\r\n            name: '',\r\n            count: '',\r\n            weight: '',\r\n            desc: '',\r\n            height: '',\r\n            width: '',\r\n        })\r\n    }\r\n\r\n    const disabled = !form.imageUrl || !form.name || !form.count || !form.weight || !form.desc || !form.height || !form.width\r\n\r\n    const submitFunc: () => Promise<void> = async () => {\r\n        const newProduct: IProductItem = {\r\n            id: new Date().getTime().toString(),\r\n            imageUrl: form.imageUrl as string,\r\n            name: form.name as string,\r\n            count: Number(form.count),\r\n            description: form.desc as string,\r\n            size: {\r\n                width: Number(form.width),\r\n                height: Number(form.height)\r\n            },\r\n            weight: form.weight as string,\r\n            comments: []\r\n        }\r\n        if (isEdit) {\r\n            dispatch(await updateProduct({...newProduct, id:id as string}))\r\n        } else {\r\n            dispatch(await addProduct(newProduct))\r\n        }\r\n\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            width='400px'\r\n            activeModal={activeModal}\r\n            closeModal={closeModal}\r\n        >\r\n            <p className='w-full text-center font-semibold text-base py-2 border-b'>{isEdit ? 'Edit Product' : 'Add Edit' }</p>\r\n            <form method='POST' className='mt-4 flex flex-col'>\r\n                <div className='flex justify-center items-center'>\r\n                    <label className='text-xs w-32 h-32 border rounded-full flex items-center justify-center cursor-pointer mb-4'>\r\n                        {form.imageUrl?.length ? <img alt='productPhoto' src={form.imageUrl} className=\"w-full h-full object-cover rounded-full\" /> : <p>Choose photo</p>}\r\n\r\n                        <input type='file' className='hidden' onChange={(e) => uploadImage(e)} />\r\n                    </label>\r\n                </div>\r\n\r\n                <input\r\n                    required\r\n                    name='name'\r\n                    value={form.name}\r\n                    type='text'\r\n                    className='text-sm border rounded mx-4 placeholder:text-sm outline-none px-4 py-2 mb-4'\r\n                    placeholder='Name...'\r\n                    onChange={(e) => handleChange(e)}\r\n                />\r\n                <input\r\n                    required\r\n                    name='weight'\r\n                    value={form.weight}\r\n                    type='number'\r\n                    className='text-sm w-40 border rounded mx-4 placeholder:text-sm outline-none px-4 py-2 mb-4'\r\n                    placeholder='Weight(grams)...'\r\n                    onChange={(e) => handleChange(e)}\r\n                />\r\n                <input\r\n                    required\r\n                    name='count'\r\n                    value={form.count}\r\n                    type='number'\r\n                    className='text-sm w-40 border rounded mx-4 placeholder:text-sm outline-none px-4 py-2 mb-4'\r\n                    placeholder='Amount...'\r\n                    onChange={(e) => handleChange(e)}\r\n                />\r\n                <input\r\n                    required\r\n                    name='width'\r\n                    value={form.width}\r\n                    type='number'\r\n                    className='text-sm w-40 border rounded mx-4 placeholder:text-sm outline-none px-4 py-2 mb-4'\r\n                    placeholder='Width...'\r\n                    onChange={(e) => handleChange(e)}\r\n                />\r\n                <input\r\n                    required\r\n                    name='height'\r\n                    value={form.height}\r\n                    type='number'\r\n                    className='text-sm w-40 border rounded mx-4 placeholder:text-sm outline-none px-4 py-2 mb-4'\r\n                    placeholder='Height...'\r\n                    onChange={(e) => handleChange(e)}\r\n                />\r\n\r\n                <textarea\r\n                    name='desc'\r\n                    value={form.desc}\r\n                    placeholder='Describe product...'\r\n                    className='px-4 py-2 text-sm border rounded mx-4 placeholder:text-sm outline-none resize-none'\r\n                    onChange={(e) => handleChange(e)}\r\n                />\r\n\r\n                <div className='w-full flex justify-between px-4'>\r\n                    <button\r\n                        className='p-3 font-semibold text-red-500'\r\n                        type='button'\r\n                        onClick={closeModal}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        disabled={disabled}\r\n                        className={`p-3 font-semibold ${disabled ? 'text-blue-200' : 'text-blue-500'}`}\r\n                        type='button'\r\n                        onClick={() => submitFunc()}\r\n                    >\r\n                        Confirm\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default React.memo(AddProductModal)","import React from 'react'\r\n\r\ntype ModalType = {\r\n    width: string\r\n    activeModal: boolean\r\n    closeModal: () => void\r\n    children: React.ReactNode\r\n}\r\n\r\nconst Modal: React.FC<ModalType> = ({ children, width, activeModal, closeModal }) => {\r\n\r\n    return (\r\n        <div\r\n            onClick={closeModal}\r\n            className={`w-screen h-screen fixed top-0 left-0 cursor-default z-10 flex bg-modal items-center justify-center duration-300 \r\n        ${activeModal ? 'opacity-1 pointer-events-auto' : 'opacity-0 pointer-events-none'}`}\r\n        >\r\n            <div\r\n                style={{ width: width, transform: activeModal ? 'scale(1)' : 'scale(0.5)' }}\r\n                onClick={(e) => e.stopPropagation()}\r\n                className={`bg-white rounded-md duration-300 ${activeModal ? 'scale-100' : 'scale-50'}`}\r\n            >\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Modal)","import React, { useMemo } from 'react'\r\n\r\ntype DropDown = {\r\n    activeModal: boolean\r\n    setActiveModal: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nconst DropDown: React.FC<DropDown> = ({ activeModal, setActiveModal }) => {\r\n    const sortArray = ['Amount (A-Z)', 'Amount (Z-A)', 'Alpha(A-Z)', 'Alpha(Z-A)']\r\n\r\n    const mappedSortArray = useMemo(() => sortArray.map((el, idx) => <p key={idx} className='p-2 text-sm cursor-pointer'>{el}</p>), [sortArray])\r\n    return (\r\n        <>\r\n            <div\r\n                onClick={() => setActiveModal(false)}\r\n                className={`w-screen h-screen fixed top-0 left-0 cursor-default z-10 flex\r\n${activeModal ? 'block pointer-events-auto' : 'hidden pointer-events-none'}`}></div>\r\n            <div\r\n                style={{ top: activeModal ? '30px' : '0px' }}\r\n                className={`z-10 w-drop absolute shadow-defaultBtn bg-white rounded-md duration-300 top-10 ${activeModal ? ' opacity-100 pointer-events-auto' : 'pointer-events-none opacity-0'}`}\r\n                onClick={(e) => e.stopPropagation()}\r\n            >\r\n                {mappedSortArray}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DropDown","import React, { useState } from 'react'\r\nimport DropDown from '../../../../../components/DropDown/DropDown'\r\n\r\nconst Sort = () => {\r\n    const [activeDropDown, setActiveDropDown] = useState(false)\r\n    return (\r\n        <div className='relative'>\r\n            <div className='flex items-center cursor-pointer' onClick={() => setActiveDropDown(true)}>\r\n                <p className='mr-2'>High → Low</p>\r\n                <img alt='arrow' src={process.env.PUBLIC_URL + '/images/down-arrow-icon.png'} className='h-4 w-4' />\r\n            </div>\r\n            <DropDown\r\n                activeModal={activeDropDown}\r\n                setActiveModal={setActiveDropDown}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sort","import React, { useState } from 'react'\r\nimport AddProductModal from '../../../../../components/Modals/AddProductModal/AddProductModal'\r\nimport Button from '../../../../../components/Button/Button'\r\nimport Sort from '../Sort/Sort'\r\n\r\nconst HomeHeader: React.FC = () => {\r\n\r\n    const [activeModal, setActiveModal] = useState(false)\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='w-full flex justify-between'>\r\n                <Button\r\n                    color='bg-blue-600'\r\n                    action={() => setActiveModal(true)}\r\n                    text='ADD PRODUCT'\r\n                    hover='bg-blue-700'\r\n                />\r\n                <Sort />\r\n            </div>\r\n            <AddProductModal\r\n                activeModal={activeModal}\r\n                setActiveModal={setActiveModal}\r\n                isEdit={false}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(HomeHeader)","import React, { useState } from 'react'\r\nimport { removeProduct } from '../../../redux/slices/thunks/removeProduct'\r\nimport { useAppDispatch } from '../../../redux/hooks'\r\nimport Modal from '../Modal'\r\n\r\ntype DeleteModalType = {\r\n    activeModal: boolean\r\n    setActiveModal: React.Dispatch<React.SetStateAction<boolean>>\r\n    id: string\r\n}\r\n\r\n\r\nconst DeleteModal: React.FC<DeleteModalType> = ({ activeModal, setActiveModal, id }) => {\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    const deleteItem: () => Promise<void> = async () => {\r\n        dispatch(await removeProduct(id))\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            width='400px'\r\n            activeModal={activeModal}\r\n            closeModal={() => setActiveModal(false)}\r\n        >\r\n            <p className='py-2 w-full text-center font-semibold border-b'>Are you sure?</p>\r\n            <div className='flex flex-col'>\r\n                <button\r\n                    type='button'\r\n                    className='py-2 border-b text-red-500'\r\n                    onClick={deleteItem}\r\n                    >\r\n                    Delete\r\n                </button>\r\n                <button\r\n                    type='button'\r\n                    className='py-2'\r\n                    onClick={() => setActiveModal(false)}\r\n                    >\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default React.memo(DeleteModal)","import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { IProductItem } from '../../../../../interfaces/IProductItem'\r\nimport Button from '../../../../../components/Button/Button'\r\nimport DeleteModal from '../../../../../components/Modals/DeleteModal/DeleteModal'\r\n\r\nconst ProductItem: React.FC<IProductItem> = ({ name, imageUrl, id }) => {\r\n    const [hover, setHover] = useState(false)\r\n    const [activeModal, setActiveModal] = useState(false)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className='w-full hover:bg-gray-200 cursor-pointer p-4 border rounded-lg'\r\n                onMouseEnter={() => setHover(true)}\r\n                onMouseLeave={() => setHover(false)}\r\n            >\r\n                <div className='w-full'>\r\n                    <img\r\n                        src={imageUrl}\r\n                        alt='Product Image'\r\n                        className='w-full object-cover h-40 rounded-lg'\r\n                        onClick={() => navigate(id)}\r\n                    />\r\n                </div>\r\n                <div className='flex justify-between items-center mt-3 h-btn'>\r\n                    <p className='text-xl font-semibold' onClick={() => navigate(id)}>{name}</p>\r\n                    {hover &&\r\n                        <Button\r\n                            color='bg-red-500'\r\n                            action={() => setActiveModal(true)}\r\n                            text='DELETE'\r\n                            hover='bg-red-700'\r\n\r\n                        />}\r\n                </div>\r\n            </div>\r\n            <DeleteModal\r\n                activeModal={activeModal}\r\n                setActiveModal={setActiveModal}\r\n                id={id}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProductItem)","import React, { useEffect, useMemo } from 'react'\r\nimport { fetchProducts } from '../../../../../redux/slices/thunks/fetchProducts'\r\nimport { useAppSelector, useAppDispatch } from '../../../../../redux/hooks'\r\nimport ProductItem from '../ProductItem/ProductItem'\r\n\r\nconst ListProducts: React.FC = () => {\r\n\r\n    const products = useAppSelector(state => state.productSlice.products)\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n        const getProducts = async () => {\r\n            dispatch(await fetchProducts())\r\n        }\r\n\r\n        getProducts()\r\n    }, [dispatch])\r\n\r\n    const productsArray = useMemo(() => products.map(product => <ProductItem key={product.id} {...product} />), [products])\r\n\r\n    return (\r\n        <div className='mt-8 min-h-600'>\r\n            <div className='grid p-[30px] grid-cols-3 auto-rows-auto gap-6'>\r\n                {productsArray}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(ListProducts)","import React from 'react'\r\nimport HomeHeader from './components/HomeHeader/HomeHeader'\r\nimport ListProducts from './components/ListProducts/ListProducts'\r\n\r\nconst HomeMain: React.FC = () => {\r\n    return (\r\n        <section className='mt-10'>\r\n            <HomeHeader />\r\n            <ListProducts />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default React.memo(HomeMain)","import React from 'react'\r\nimport Container from '../../components/Container/Container'\r\nimport HomeMain from './HomeMain/HomeMain'\r\n\r\nconst Home: React.FC = () => {\r\n    return (\r\n        <div className='w-full flex justify-center'>\r\n            <Container>\r\n                <h1 className='text-3xl font-medium text-center'>Product List</h1>\r\n                <HomeMain />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Home)","import { useDispatch, useSelector } from 'react-redux'\r\nimport type { TypedUseSelectorHook } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector"],"names":["Button","color","action","text","hover","type","className","onClick","React","Container","children","AddProductModal","activeModal","setActiveModal","isEdit","id","useState","imageUrl","name","count","weight","desc","height","width","form","setForm","dispatch","useAppDispatch","useEffect","getProduct","axios","PRODUCTS_API","data","description","size","console","log","String","handleChange","e","target","value","prevForm","closeModal","disabled","submitFunc","newProduct","Date","getTime","toString","Number","comments","updateProduct","addProduct","method","length","alt","src","onChange","reader","FileReader","onload","readyState","result","files","readAsDataURL","uploadImage","required","placeholder","Modal","style","transform","stopPropagation","sortArray","mappedSortArray","useMemo","map","el","idx","top","activeDropDown","setActiveDropDown","process","HomeHeader","DeleteModal","deleteItem","removeProduct","ProductItem","setHover","navigate","useNavigate","onMouseEnter","onMouseLeave","ListProducts","products","useAppSelector","state","productSlice","getProducts","fetchProducts","productsArray","product","HomeMain","Home","useDispatch","useSelector"],"sourceRoot":""}